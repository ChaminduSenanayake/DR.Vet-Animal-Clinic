/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.animalclinic.view;

import lk.ijse.animalclinic.view.panels.AddAppointmentPanel;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lk.ijse.animalclinic.common.IDGenarator;
import lk.ijse.animalclinic.common.Validation;
import lk.ijse.animalclinic.controller.OwnerController;
import lk.ijse.animalclinic.controller.PetController;
import lk.ijse.animalclinic.core.dto.OwnerDTO;
import lk.ijse.animalclinic.core.dto.PetDTO;
import static lk.ijse.animalclinic.view.DialogFormAddOwner.isAdded;

/**
 *
 * @author chamindu
 */
public class DialogFormAddPet extends javax.swing.JDialog {

    /**
     * Creates new form DialogFormAddPet
     */
    public DialogFormAddPet(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getPetID();
        loadAllOwnerIDs();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtPetID = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        txtPetBreed = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        txtPetWeight = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        txtDesc = new javax.swing.JTextField();
        txtPetName = new javax.swing.JTextField();
        btnAddPet = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JLabel();
        cmbOwnerID = new org.jdesktop.swingx.JXComboBox();
        txtNIC = new javax.swing.JTextField();
        cmbSex = new org.jdesktop.swingx.JXComboBox();
        txtPetDOB = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel9.setBackground(new java.awt.Color(250, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(40, 135, 173), 5));
        jPanel9.setPreferredSize(new java.awt.Dimension(1080, 520));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel54.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(29, 120, 156));
        jLabel54.setText("Add New Pet ");
        jPanel9.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 220, 40));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(40, 135, 173));
        jLabel18.setText("Pet ID         -");
        jPanel9.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 110, 30));

        txtPetID.setEditable(false);
        txtPetID.setBackground(new java.awt.Color(250, 255, 255));
        txtPetID.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        txtPetID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel9.add(txtPetID, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 220, 30));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(40, 135, 173));
        jLabel21.setText("Sex              -");
        jPanel9.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 110, 30));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(40, 135, 173));
        jLabel48.setText("Name          -");
        jPanel9.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 110, 30));

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(40, 135, 173));
        jLabel51.setText("Breed          -");
        jPanel9.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 110, 30));

        txtPetBreed.setBackground(new java.awt.Color(250, 255, 255));
        txtPetBreed.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPetBreed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtPetBreed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPetBreedFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPetBreedFocusLost(evt);
            }
        });
        txtPetBreed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPetBreedActionPerformed(evt);
            }
        });
        jPanel9.add(txtPetBreed, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 235, 220, 30));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(40, 135, 173));
        jLabel49.setText("D.O.B          -");
        jPanel9.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 110, 30));

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(40, 135, 173));
        jLabel53.setText("weight        -");
        jPanel9.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 110, 30));

        txtPetWeight.setBackground(new java.awt.Color(250, 255, 255));
        txtPetWeight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPetWeight.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtPetWeight.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPetWeightFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPetWeightFocusLost(evt);
            }
        });
        txtPetWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPetWeightActionPerformed(evt);
            }
        });
        jPanel9.add(txtPetWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 220, 30));

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(40, 135, 173));
        jLabel52.setText("Description -");
        jPanel9.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 110, 30));

        txtDesc.setBackground(new java.awt.Color(250, 255, 255));
        txtDesc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDesc.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescActionPerformed(evt);
            }
        });
        jPanel9.add(txtDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 950, 30));

        txtPetName.setBackground(new java.awt.Color(250, 255, 255));
        txtPetName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPetName.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtPetName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPetNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPetNameFocusLost(evt);
            }
        });
        txtPetName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPetNameActionPerformed(evt);
            }
        });
        jPanel9.add(txtPetName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 115, 220, 30));

        btnAddPet.setBackground(new java.awt.Color(102, 102, 102));
        btnAddPet.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddPet.setForeground(new java.awt.Color(255, 255, 255));
        btnAddPet.setText("  + New Pet");
        btnAddPet.setOpaque(true);
        btnAddPet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddPetMouseClicked(evt);
            }
        });
        jPanel9.add(btnAddPet, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 470, 130, 50));

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(40, 135, 173));
        jLabel45.setText("NIC              -");
        jPanel9.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 60, 110, 30));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(40, 135, 173));
        jLabel27.setText("Owner ID    -");
        jPanel9.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 110, 30));

        btnCancel.setBackground(new java.awt.Color(102, 102, 102));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("       Cancel");
        btnCancel.setOpaque(true);
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCancelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCancelMouseReleased(evt);
            }
        });
        jPanel9.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 470, 130, 50));

        cmbOwnerID.setBackground(new java.awt.Color(250, 255, 255));
        cmbOwnerID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbOwnerID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOwnerIDItemStateChanged(evt);
            }
        });
        cmbOwnerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOwnerIDActionPerformed(evt);
            }
        });
        jPanel9.add(cmbOwnerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 220, 30));

        txtNIC.setEditable(false);
        txtNIC.setBackground(new java.awt.Color(250, 255, 255));
        txtNIC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNIC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtNIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNICActionPerformed(evt);
            }
        });
        jPanel9.add(txtNIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 60, 240, 30));

        cmbSex.setBackground(new java.awt.Color(250, 255, 255));
        cmbSex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        cmbSex.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbSex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSexActionPerformed(evt);
            }
        });
        jPanel9.add(cmbSex, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 220, 30));

        txtPetDOB.setBackground(new java.awt.Color(250, 255, 255));
        txtPetDOB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPetDOB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtPetDOB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPetDOBFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPetDOBFocusLost(evt);
            }
        });
        txtPetDOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPetDOBActionPerformed(evt);
            }
        });
        jPanel9.add(txtPetDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, 220, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("KG");
        jPanel9.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 360, 30, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtPetBreedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPetBreedActionPerformed
        txtPetDOB.requestFocus();
    }//GEN-LAST:event_txtPetBreedActionPerformed

    private void txtDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescActionPerformed

    private void btnAddPetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddPetMouseClicked
        if (txtPetName.getText().isEmpty() || txtPetWeight.getText().isEmpty() || txtPetBreed.getText().isEmpty() || txtPetDOB.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all");
        } else {

            PetDTO pet = new PetDTO(cmbOwnerID.getSelectedItem().toString(), txtPetID.getText(), txtPetName.getText(), (String) cmbSex.getSelectedItem(), txtPetBreed.getText(), txtPetDOB.getText(), Double.parseDouble(txtPetWeight.getText()), txtDesc.getText());
            try {
                boolean result = PetController.addPet(pet);

                if (result) {
                    JOptionPane.showMessageDialog(this, "Pet has been successfully added.");
                    isAdded();
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Pet hasn't been added due to some error");
                }

            } catch (Exception ex) {
                Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAddPetMouseClicked

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked
        this.dispose();
    }//GEN-LAST:event_btnCancelMouseClicked

    private void btnCancelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMousePressed
        btnCancel.setBackground(new Color(200, 200, 200));
    }//GEN-LAST:event_btnCancelMousePressed

    private void btnCancelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseReleased
        btnCancel.setBackground(new Color(102, 102, 102));
    }//GEN-LAST:event_btnCancelMouseReleased

    private void cmbOwnerIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOwnerIDItemStateChanged
        try {
            OwnerDTO owner = OwnerController.searchOwnerByID(cmbOwnerID.getSelectedItem().toString());
            txtNIC.setText(owner.getNIC());
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtNIC.requestFocus();
    }//GEN-LAST:event_cmbOwnerIDItemStateChanged

    private void cmbOwnerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOwnerIDActionPerformed

    }//GEN-LAST:event_cmbOwnerIDActionPerformed

    private void txtNICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNICActionPerformed
        try {
            OwnerDTO owner = OwnerController.searchOwnerByNIC(txtNIC.getText());
            cmbOwnerID.setSelectedItem(owner.getOID());
            txtNIC.setText(owner.getNIC());
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtNICActionPerformed

    private void txtPetDOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPetDOBActionPerformed
        /*try {
            PetDTO pet = PetController.searchPetByName(txtPetName.getText());
            cmbPetID.setSelectedItem(pet.getPetID());
            txtPetName.setText(pet.getPetName());
            txtPetBreed.setText(pet.getBreed());
            cmbSex.setSelectedItem(pet.getSex());
            txtPetDOB.setDate(pet.getDOB());
            txtPetWeight.setText(Double.toString(pet.getWeight()));
            txtDesc.setText(pet.getDescription());

        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        txtPetWeight.requestFocus();
    }//GEN-LAST:event_txtPetDOBActionPerformed

    private void txtPetDOBFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetDOBFocusGained
        txtPetDOB.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtPetDOBFocusGained

    private void txtPetDOBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetDOBFocusLost
        if (Validation.dobValidation(txtPetDOB)) {
            btnAddPet.setEnabled(true);
        } else {
            txtPetDOB.setForeground(Color.red);
            btnAddPet.setEnabled(false);
        }
    }//GEN-LAST:event_txtPetDOBFocusLost

    private void txtPetNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetNameFocusGained
        txtPetName.setForeground(Color.BLACK);    
    }//GEN-LAST:event_txtPetNameFocusGained

    private void txtPetNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetNameFocusLost
        if (Validation.name(txtPetName)) {
            btnAddPet.setEnabled(true);
        } else {
            txtPetName.setForeground(Color.red);
            btnAddPet.setEnabled(false);
        }
    }//GEN-LAST:event_txtPetNameFocusLost

    private void txtPetBreedFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetBreedFocusGained
        txtPetBreed.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtPetBreedFocusGained

    private void txtPetBreedFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetBreedFocusLost
        if (Validation.name(txtPetBreed)) {
            btnAddPet.setEnabled(true);
        } else {
            txtPetBreed.setForeground(Color.red);
            btnAddPet.setEnabled(false);
        }
    }//GEN-LAST:event_txtPetBreedFocusLost

    private void txtPetWeightFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetWeightFocusGained
        txtPetWeight.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtPetWeightFocusGained

    private void txtPetWeightFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetWeightFocusLost
//        if(Validation.numberOnly(txtPetWeight)){}else{
//            txtPetWeight.setForeground(Color.red);
//            txtPetWeight.selectAll();
//        }
    }//GEN-LAST:event_txtPetWeightFocusLost

    private void txtPetNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPetNameActionPerformed
       cmbSex.requestFocus();
    }//GEN-LAST:event_txtPetNameActionPerformed

    private void cmbSexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSexActionPerformed
        txtPetBreed.requestFocus();
    }//GEN-LAST:event_cmbSexActionPerformed

    private void txtPetWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPetWeightActionPerformed
        txtDesc.requestFocus();
    }//GEN-LAST:event_txtPetWeightActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogFormAddPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogFormAddPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogFormAddPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogFormAddPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogFormAddPet dialog = new DialogFormAddPet(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAddPet;
    private javax.swing.JLabel btnCancel;
    private org.jdesktop.swingx.JXComboBox cmbOwnerID;
    private org.jdesktop.swingx.JXComboBox cmbSex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextField txtNIC;
    private javax.swing.JTextField txtPetBreed;
    private javax.swing.JTextField txtPetDOB;
    private javax.swing.JTextField txtPetID;
    private javax.swing.JTextField txtPetName;
    private javax.swing.JTextField txtPetWeight;
    // End of variables declaration//GEN-END:variables

    private void loadAllOwnerIDs() {
        try {
            ArrayList<OwnerDTO> allOwners = OwnerController.getAllOwners();
            cmbOwnerID.removeAllItems();

            for (OwnerDTO owner : allOwners) {
                cmbOwnerID.addItem(owner.getOID());
            }
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static boolean isAdded() {
        return true;
    }

    private void getPetID() {
        String newID;
        try {
            newID = IDGenarator.getNewID("pet", "PID", "P");
            txtPetID.setText(newID);
        } catch (SQLException ex) {
            Logger.getLogger(DialogFormAddPet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DialogFormAddPet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
