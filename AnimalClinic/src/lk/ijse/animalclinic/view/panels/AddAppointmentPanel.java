/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.animalclinic.view.panels;

import java.awt.Color;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import lk.ijse.animalclinic.common.IDGenarator;
import lk.ijse.animalclinic.common.Validation;
import lk.ijse.animalclinic.controller.AppointmentController;
import lk.ijse.animalclinic.controller.OwnerController;
import lk.ijse.animalclinic.controller.PetController;
import lk.ijse.animalclinic.controller.VetController;
import lk.ijse.animalclinic.core.dto.AppointmentDTO;
import lk.ijse.animalclinic.core.dto.OwnerDTO;
import lk.ijse.animalclinic.core.dto.PetDTO;
import lk.ijse.animalclinic.core.dto.VetDTO;
import lk.ijse.animalclinic.view.DialogFormAddOwner;
import lk.ijse.animalclinic.view.DialogFormAddPet;
import lk.ijse.animalclinic.view.HomeFrame;
import lk.ijse.animalclinic.view.HomeFrame;
import lk.ijse.animalclinic.view.ViewAvailableVet;

/**
 *
 * @author chamindu
 */
public class AddAppointmentPanel extends javax.swing.JPanel {

    AddAppointmentPanel appPanel;

    /**
     * Creates new form App
     */
    public AddAppointmentPanel() {
        initComponents();
        loadAllVetIDs();
        loadAllOwnerIDs();
        getAppointmentID();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bottomPanel = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        txtAppID = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        txtVetLastName = new org.jdesktop.swingx.JXTextField();
        txtVetFirstName = new org.jdesktop.swingx.JXTextField();
        txtAppDate = new org.jdesktop.swingx.JXDatePicker();
        btnViewAvailable = new javax.swing.JLabel();
        cmbVetID = new org.jdesktop.swingx.JXComboBox();
        txtAppTime = new org.jdesktop.swingx.JXTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtTelNo = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        txtNIC = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        btnAddOwner = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        btnEditOwner = new javax.swing.JLabel();
        txtOwnerLastName = new org.jdesktop.swingx.JXTextField();
        txtOwnerFirstName = new org.jdesktop.swingx.JXTextField();
        jLabel14 = new javax.swing.JLabel();
        cmbOwnerID = new org.jdesktop.swingx.JXComboBox();
        jPanel9 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        txtPetBreed = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        txtDesc = new javax.swing.JTextField();
        btnAddPet = new javax.swing.JLabel();
        txtPetDOB = new javax.swing.JTextField();
        btnEditPet = new javax.swing.JLabel();
        cmbPetID = new org.jdesktop.swingx.JXComboBox();
        cmbSex = new org.jdesktop.swingx.JXComboBox();
        txtPetWeight = new javax.swing.JSpinner();
        txtPetName1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnAddAppointment = new javax.swing.JLabel();
        btnCancel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(1280, 720));

        bottomPanel.setBackground(new java.awt.Color(255, 255, 255));
        bottomPanel.setPreferredSize(new java.awt.Dimension(1280, 720));
        bottomPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setOpaque(false);
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel40.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(204, 204, 204));
        jLabel40.setText("Appointment");
        jPanel7.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 40));

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel42.setText("App.ID        -");
        jPanel7.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 110, 30));

        txtAppID.setEditable(false);
        txtAppID.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        txtAppID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.add(txtAppID, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 50, 220, 30));

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel59.setText("Date            -");
        jPanel7.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 110, 30));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setText("Time            -");
        jPanel7.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(795, 50, 110, 30));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setText("Vet.ID         -");
        jPanel7.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 110, 30));

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel55.setText("Vet Name   -");
        jPanel7.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 130, 30));

        txtVetLastName.setEditable(false);
        txtVetLastName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtVetLastName.setPrompt("Last Name");
        txtVetLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVetLastNameActionPerformed(evt);
            }
        });
        jPanel7.add(txtVetLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(795, 100, 345, 30));

        txtVetFirstName.setEditable(false);
        txtVetFirstName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtVetFirstName.setPrompt("First Name");
        jPanel7.add(txtVetFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, 240, 30));

        txtAppDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAppDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAppDateFocusLost(evt);
            }
        });
        txtAppDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAppDateActionPerformed(evt);
            }
        });
        jPanel7.add(txtAppDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, 240, 30));

        btnViewAvailable.setBackground(new java.awt.Color(102, 102, 102));
        btnViewAvailable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnViewAvailable.setForeground(new java.awt.Color(255, 255, 255));
        btnViewAvailable.setText(" View Available Vet");
        btnViewAvailable.setOpaque(true);
        btnViewAvailable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewAvailableMouseClicked(evt);
            }
        });
        jPanel7.add(btnViewAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 100, 130, 30));

        cmbVetID.setBackground(new java.awt.Color(250, 255, 255));
        cmbVetID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbVetID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbVetIDItemStateChanged(evt);
            }
        });
        jPanel7.add(cmbVetID, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 100, 220, 30));

        txtAppTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAppTime.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtAppTime.setPrompt("HH:MM");
        txtAppTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAppTimeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAppTimeFocusLost(evt);
            }
        });
        txtAppTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAppTimeActionPerformed(evt);
            }
        });
        jPanel7.add(txtAppTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 50, 240, 30));

        bottomPanel.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 150));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setOpaque(false);
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel41.setBackground(new java.awt.Color(51, 255, 255));
        jLabel41.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(204, 204, 204));
        jLabel41.setText("Owner Details");
        jPanel8.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 40));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel27.setText("Owner ID    -");
        jPanel8.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 110, 30));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Tel.No       -");
        jPanel8.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 100, 110, 30));

        txtTelNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTelNo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtTelNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelNoFocusLost(evt);
            }
        });
        jPanel8.add(txtTelNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 100, 240, 30));

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel45.setText("NIC              -");
        jPanel8.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 110, 30));

        txtNIC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNIC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtNIC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNICFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNICFocusLost(evt);
            }
        });
        txtNIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNICActionPerformed(evt);
            }
        });
        jPanel8.add(txtNIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, 240, 30));

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel46.setText("Address       -");
        jPanel8.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 110, 30));

        btnAddOwner.setBackground(new java.awt.Color(102, 102, 102));
        btnAddOwner.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddOwner.setForeground(new java.awt.Color(255, 255, 255));
        btnAddOwner.setText("+ New Owner");
        btnAddOwner.setOpaque(true);
        btnAddOwner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddOwnerMouseClicked(evt);
            }
        });
        jPanel8.add(btnAddOwner, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 140, 130, 50));

        txtAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAddress.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 150, 1025, 30));

        btnEditOwner.setBackground(new java.awt.Color(102, 102, 102));
        btnEditOwner.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnEditOwner.setForeground(new java.awt.Color(255, 255, 255));
        btnEditOwner.setText("  Edit Owner");
        btnEditOwner.setOpaque(true);
        btnEditOwner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnEditOwnerMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnEditOwnerMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditOwnerMouseClicked(evt);
            }
        });
        jPanel8.add(btnEditOwner, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 80, 130, 50));

        txtOwnerLastName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtOwnerLastName.setPrompt("Last Name");
        txtOwnerLastName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtOwnerLastNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOwnerLastNameFocusLost(evt);
            }
        });
        jPanel8.add(txtOwnerLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 370, 30));

        txtOwnerFirstName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtOwnerFirstName.setPrompt("First Name");
        txtOwnerFirstName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtOwnerFirstNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOwnerFirstNameFocusLost(evt);
            }
        });
        jPanel8.add(txtOwnerFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 100, 220, 30));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Name           -");
        jPanel8.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 110, 30));

        cmbOwnerID.setBackground(new java.awt.Color(250, 255, 255));
        cmbOwnerID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbOwnerID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOwnerIDItemStateChanged(evt);
            }
        });
        cmbOwnerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOwnerIDActionPerformed(evt);
            }
        });
        jPanel8.add(cmbOwnerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 50, 220, 30));

        bottomPanel.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 1280, 190));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setOpaque(false);
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel54.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(204, 204, 204));
        jLabel54.setText("pet Details");
        jPanel9.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 40));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Pet ID         -");
        jPanel9.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 110, 30));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setText("Sex              -");
        jPanel9.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 110, 30));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel48.setText("Name          -");
        jPanel9.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 110, 30));

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel51.setText("Breed          -");
        jPanel9.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 110, 30));

        txtPetBreed.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPetBreed.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPetBreed.setToolTipText("");
        txtPetBreed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtPetBreed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPetBreedFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPetBreedFocusLost(evt);
            }
        });
        jPanel9.add(txtPetBreed, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, 375, 30));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel49.setText("D.O.B          -");
        jPanel9.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 110, 30));

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel53.setText("weight        -");
        jPanel9.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, 110, 30));

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel52.setText("Description -");
        jPanel9.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 110, 30));

        txtDesc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDesc.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel9.add(txtDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 200, 1025, 30));

        btnAddPet.setBackground(new java.awt.Color(102, 102, 102));
        btnAddPet.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddPet.setForeground(new java.awt.Color(255, 255, 255));
        btnAddPet.setText("+ New Pet");
        btnAddPet.setOpaque(true);
        btnAddPet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddPetMouseClicked(evt);
            }
        });
        jPanel9.add(btnAddPet, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 190, 130, 50));

        txtPetDOB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPetDOB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtPetDOB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPetDOBFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPetDOBFocusLost(evt);
            }
        });
        txtPetDOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPetDOBActionPerformed(evt);
            }
        });
        jPanel9.add(txtPetDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 150, 220, 30));

        btnEditPet.setBackground(new java.awt.Color(102, 102, 102));
        btnEditPet.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnEditPet.setForeground(new java.awt.Color(255, 255, 255));
        btnEditPet.setText("   Edit pet");
        btnEditPet.setOpaque(true);
        btnEditPet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditPetMouseClicked(evt);
            }
        });
        jPanel9.add(btnEditPet, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 130, 130, 50));

        cmbPetID.setBackground(new java.awt.Color(250, 255, 255));
        cmbPetID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbPetID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPetIDItemStateChanged(evt);
            }
        });
        jPanel9.add(cmbPetID, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 50, 220, 30));

        cmbSex.setBackground(new java.awt.Color(250, 255, 255));
        cmbSex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        cmbSex.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel9.add(cmbSex, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, 160, 30));
        jPanel9.add(txtPetWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, 160, 30));

        txtPetName1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPetName1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtPetName1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPetName1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPetName1FocusLost(evt);
            }
        });
        txtPetName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPetName1ActionPerformed(evt);
            }
        });
        jPanel9.add(txtPetName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 100, 220, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("KG");
        jPanel9.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 150, 30, 30));

        bottomPanel.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 1280, 240));

        btnAddAppointment.setBackground(new java.awt.Color(102, 102, 102));
        btnAddAppointment.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        btnAddAppointment.setForeground(new java.awt.Color(255, 255, 255));
        btnAddAppointment.setText(" ADD APPOINTMENT");
        btnAddAppointment.setOpaque(true);
        btnAddAppointment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddAppointmentMouseClicked(evt);
            }
        });
        bottomPanel.add(btnAddAppointment, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 660, 180, 60));

        btnCancel.setBackground(new java.awt.Color(102, 102, 102));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(189, 103, 107));
        btnCancel.setText("           CANCEL");
        btnCancel.setOpaque(true);
        bottomPanel.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 660, 180, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bottomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddOwnerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddOwnerMouseClicked
        DialogFormAddOwner addOwner = new DialogFormAddOwner(HomeFrame.homeFrame, true);
        addOwner.setVisible(true);
        if (DialogFormAddOwner.isAdded()) {
            loadAllOwnerIDs();
        }
    }//GEN-LAST:event_btnAddOwnerMouseClicked

    private void btnEditOwnerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditOwnerMousePressed
        btnEditOwner.setBackground(new Color(200, 200, 200));
    }//GEN-LAST:event_btnEditOwnerMousePressed

    private void btnEditOwnerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditOwnerMouseReleased
        btnEditOwner.setBackground(new Color(102, 102, 102));
    }//GEN-LAST:event_btnEditOwnerMouseReleased

    private void btnEditOwnerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditOwnerMouseClicked
        OwnerDTO owner = new OwnerDTO(cmbOwnerID.getSelectedItem().toString(), txtOwnerFirstName.getText(), txtOwnerLastName.getText(), txtAddress.getText(), txtTelNo.getText(), txtNIC.getText());
        try {
            boolean result = OwnerController.editOwner(owner);

            if (result) {
                JOptionPane.showMessageDialog(this, "Owner has been successfully Edited.");

            } else {
                JOptionPane.showMessageDialog(this, "Owner hasn't been edited due to some error");
            }

        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditOwnerMouseClicked

    private void txtNICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNICActionPerformed
        /*try {
            OwnerDTO owner = OwnerController.searchOwnerByNIC(txtNIC.getText());
            cmbOwnerID.setSelectedItem(owner.getOID());
            txtOwnerFirstName.setText(owner.getFirstName());
            txtOwnerLastName.setText(owner.getLastName());
            txtAddress.setText(owner.getAddress());
            txtTelNo.setText(owner.getTel());
            txtNIC.setText(owner.getNIC());
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }*/

    }//GEN-LAST:event_txtNICActionPerformed

    private void txtPetDOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPetDOBActionPerformed
        /*try {
            PetDTO pet = PetController.searchPetByName(txtPetName.getText());
            cmbPetID.setSelectedItem(pet.getPetID());
            txtPetName.setText(pet.getPetName());
            txtPetBreed.setText(pet.getBreed());
            cmbSex.setSelectedItem(pet.getSex());
            txtPetDOB.setDate(pet.getDOB());
            txtPetWeight.setText(Double.toString(pet.getWeight()));
            txtDesc.setText(pet.getDescription());

        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_txtPetDOBActionPerformed

    private void btnAddPetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddPetMouseClicked
        DialogFormAddPet addPet = new DialogFormAddPet(HomeFrame.homeFrame, true);
        addPet.setVisible(true);
        if (DialogFormAddPet.isAdded()) {
            loadPetIDs();
        }
    }//GEN-LAST:event_btnAddPetMouseClicked

    private void btnEditPetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditPetMouseClicked
        PetDTO pet = new PetDTO(cmbOwnerID.getSelectedItem().toString(), cmbPetID.getSelectedItem().toString(), txtPetDOB.getText(), (String) cmbSex.getSelectedItem(), txtPetBreed.getText(), txtPetDOB.getText(), Double.parseDouble(txtPetWeight.getValue().toString()), txtDesc.getText());
        try {
            boolean result = PetController.editPet(pet);

            if (result) {
                JOptionPane.showMessageDialog(this, "Pet has been successfully Edited.");

            } else {
                JOptionPane.showMessageDialog(this, "Pet hasn't been edited due to some error");
            }

        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditPetMouseClicked

    private void btnAddAppointmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddAppointmentMouseClicked
        if (txtAppTime.getText().isEmpty() || txtAppDate.getDate() == null) {
            JOptionPane.showMessageDialog(null, "please Enter Valid Time and Date ");
            } else {
                try {
                    DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                    Date date = txtAppDate.getDate();
                    AppointmentDTO app = new AppointmentDTO(txtAppID.getText(), cmbOwnerID.getSelectedItem().toString(), cmbPetID.getSelectedItem().toString(), cmbVetID.getSelectedItem().toString(), df.format(date), txtAppTime.getText());
                    boolean result = AppointmentController.addAppointment(app);

                    if (result) {
                        JOptionPane.showMessageDialog(this, "Appointment has been successfully added.");
                        getAppointmentID();
                        txtAppDate.setDate(null);
                        txtAppTime.setText(null);

                    } else {
                        JOptionPane.showMessageDialog(this, "appointment hasn't been added due to some error");
                    }

                } catch (Exception ex) {
                    Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            
        }
    }//GEN-LAST:event_btnAddAppointmentMouseClicked

    private void cmbOwnerIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOwnerIDItemStateChanged
        txtPetDOB.setText(null);
        txtPetBreed.setText(null);
        txtPetWeight.setValue(0);
        txtDesc.setText(null);
        txtPetDOB.setText(null);
        try {
            if (cmbOwnerID.getSelectedIndex() == -1) {
                return;
            }
            OwnerDTO owner = OwnerController.searchOwnerByID(cmbOwnerID.getSelectedItem().toString());
            if (owner == null) {
                return;
            }
            txtOwnerFirstName.setText(owner.getFirstName());
            txtOwnerLastName.setText(owner.getLastName());
            txtAddress.setText(owner.getAddress());
            txtTelNo.setText(owner.getTel());
            txtNIC.setText(owner.getNIC());
            loadPetIDs();
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_cmbOwnerIDItemStateChanged

    private void cmbPetIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPetIDItemStateChanged
        try {
            if (cmbPetID.getSelectedIndex() == -1) {
                return;
            }
            PetDTO pet = PetController.searchPetByID(cmbPetID.getSelectedItem().toString());
            if (pet == null) {
                return;
            }
            txtPetName1.setText(pet.getPetName());
            txtPetBreed.setText(pet.getBreed());
            cmbSex.setSelectedItem(pet.getSex());
            txtPetDOB.setText(pet.getDOB());
            txtPetWeight.setValue(pet.getWeight());
            txtDesc.setText(pet.getDescription());

        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbPetIDItemStateChanged

    private void cmbVetIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbVetIDItemStateChanged
        try {
            if (cmbVetID.getSelectedIndex() == -1) {
                return;
            }
            VetDTO vet = VetController.searchVetByID(cmbVetID.getSelectedItem().toString());
            if (vet == null) {
                return;
            }
            txtVetFirstName.setText(vet.getfName());
            txtVetLastName.setText(vet.getlName());
        } catch (Exception ex) {
            Logger.getLogger(VeterinaryPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbVetIDItemStateChanged

    private void txtPetName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPetName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPetName1ActionPerformed

    private void btnViewAvailableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewAvailableMouseClicked
        ViewAvailableVet avlbl = new ViewAvailableVet(HomeFrame.homeFrame, true);
        avlbl.setVisible(true);
        if (ViewAvailableVet.isSelected()) {
            cmbVetID.setSelectedItem(ViewAvailableVet.getVID());
        }

    }//GEN-LAST:event_btnViewAvailableMouseClicked

    private void txtNICFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNICFocusGained
        txtNIC.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtNICFocusGained

    private void txtNICFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNICFocusLost
        if (Validation.nicValidation(txtNIC)) {
            btnEditOwner.setEnabled(true);
        } else {
            btnEditOwner.setEnabled(false);
            txtNIC.setForeground(Color.red);
        }
    }//GEN-LAST:event_txtNICFocusLost

    private void txtOwnerFirstNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOwnerFirstNameFocusGained
        txtOwnerFirstName.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtOwnerFirstNameFocusGained

    private void txtOwnerFirstNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOwnerFirstNameFocusLost
        if (Validation.name(txtOwnerFirstName)) {
            btnEditOwner.setEnabled(true);
        } else {
            btnEditOwner.setEnabled(false);
            txtOwnerFirstName.setForeground(Color.red);
        }
    }//GEN-LAST:event_txtOwnerFirstNameFocusLost

    private void txtOwnerLastNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOwnerLastNameFocusGained
        txtOwnerLastName.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtOwnerLastNameFocusGained

    private void txtOwnerLastNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOwnerLastNameFocusLost
        if (Validation.name(txtOwnerLastName)) {
            btnEditOwner.setEnabled(true);
        } else {
            txtOwnerLastName.setForeground(Color.red);
            btnEditOwner.setEnabled(false);
        }
    }//GEN-LAST:event_txtOwnerLastNameFocusLost

    private void txtTelNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelNoFocusGained
        txtTelNo.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtTelNoFocusGained

    private void txtTelNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelNoFocusLost
        if (Validation.phoneNumber(txtTelNo)) {
            btnEditOwner.setEnabled(true);
        } else {
            btnEditOwner.setEnabled(false);
            txtTelNo.setForeground(Color.red);
        }
    }//GEN-LAST:event_txtTelNoFocusLost

    private void txtPetName1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetName1FocusGained
        txtPetName1.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtPetName1FocusGained

    private void txtPetName1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetName1FocusLost
        if (Validation.name(txtPetName1)) {
            btnEditPet.setEnabled(true);
        } else {
            txtPetName1.setForeground(Color.red);
            btnEditPet.setEnabled(false);
        }
    }//GEN-LAST:event_txtPetName1FocusLost

    private void txtPetBreedFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetBreedFocusGained
        txtPetBreed.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtPetBreedFocusGained

    private void txtPetBreedFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetBreedFocusLost
        if (Validation.name(txtPetBreed)) {
            btnEditPet.setEnabled(true);
        } else {
            txtPetBreed.setForeground(Color.red);
            btnEditPet.setEnabled(false);
        }
    }//GEN-LAST:event_txtPetBreedFocusLost

    private void txtPetDOBFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetDOBFocusGained
        txtPetDOB.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtPetDOBFocusGained

    private void txtPetDOBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPetDOBFocusLost
        if (Validation.dobValidation(txtPetDOB)) {
            btnEditPet.setEnabled(true);
        } else {
            txtPetDOB.setForeground(Color.red);
            btnEditPet.setEnabled(false);
        }
    }//GEN-LAST:event_txtPetDOBFocusLost

    private void txtAppDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAppDateFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAppDateFocusGained

    private void txtAppDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAppDateFocusLost
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date date = txtAppDate.getDate();
        if (Validation.date(df.format(date))) {
        } else {
            JOptionPane.showMessageDialog(null, "please Enter Valid Date");
        }
    }//GEN-LAST:event_txtAppDateFocusLost

    private void txtAppDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAppDateActionPerformed
        txtAppTime.requestFocus();
    }//GEN-LAST:event_txtAppDateActionPerformed

    private void txtAppTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAppTimeFocusGained
         txtAppTime.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtAppTimeFocusGained

    private void txtAppTimeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAppTimeFocusLost
        if (Validation.time(txtAppTime)) {
            btnAddAppointment.setEnabled(true);
        } else {
            btnAddAppointment.setEnabled(false);
            txtAppTime.setForeground(Color.red);
        }
    }//GEN-LAST:event_txtAppTimeFocusLost

    private void txtVetLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVetLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVetLastNameActionPerformed

    private void txtAppTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAppTimeActionPerformed
       cmbOwnerID.requestFocus();
    }//GEN-LAST:event_txtAppTimeActionPerformed

    private void cmbOwnerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOwnerIDActionPerformed
        cmbPetID.requestFocus();
    }//GEN-LAST:event_cmbOwnerIDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JLabel btnAddAppointment;
    private javax.swing.JLabel btnAddOwner;
    private javax.swing.JLabel btnAddPet;
    private javax.swing.JLabel btnCancel;
    private javax.swing.JLabel btnEditOwner;
    private javax.swing.JLabel btnEditPet;
    private javax.swing.JLabel btnViewAvailable;
    private org.jdesktop.swingx.JXComboBox cmbOwnerID;
    private org.jdesktop.swingx.JXComboBox cmbPetID;
    private org.jdesktop.swingx.JXComboBox cmbSex;
    private org.jdesktop.swingx.JXComboBox cmbVetID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField txtAddress;
    private org.jdesktop.swingx.JXDatePicker txtAppDate;
    private javax.swing.JTextField txtAppID;
    private org.jdesktop.swingx.JXTextField txtAppTime;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextField txtNIC;
    private org.jdesktop.swingx.JXTextField txtOwnerFirstName;
    private org.jdesktop.swingx.JXTextField txtOwnerLastName;
    private javax.swing.JTextField txtPetBreed;
    private javax.swing.JTextField txtPetDOB;
    private javax.swing.JTextField txtPetName1;
    private javax.swing.JSpinner txtPetWeight;
    private javax.swing.JTextField txtTelNo;
    private org.jdesktop.swingx.JXTextField txtVetFirstName;
    private org.jdesktop.swingx.JXTextField txtVetLastName;
    // End of variables declaration//GEN-END:variables

    private void loadAllVetIDs() {
        try {
            ArrayList<VetDTO> allVet = VetController.getAllVets();
            cmbVetID.removeAllItems();
            if (allVet == null) {
                return;
            }
            for (VetDTO vet : allVet) {
                cmbVetID.addItem(vet.getVID());
            }
        } catch (Exception ex) {
            Logger.getLogger(VeterinaryPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAllOwnerIDs() {
        try {
            ArrayList<OwnerDTO> allOwners = OwnerController.getAllOwners();
            cmbOwnerID.removeAllItems();
            if (allOwners == null) {
                return;
            }
            for (OwnerDTO owner : allOwners) {
                cmbOwnerID.addItem(owner.getOID());
            }
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadPetIDs() {
        try {
            ArrayList<PetDTO> allPets = PetController.getPets(cmbOwnerID.getSelectedItem().toString());
            cmbPetID.removeAllItems();
            if (allPets == null) {
                return;
            }
            for (PetDTO pet : allPets) {
                cmbPetID.addItem(pet.getPetID());
            }
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getAppointmentID() {
        String newID;
        try {
            newID = IDGenarator.getNewID("appointment", "AID", "A");
            txtAppID.setText(newID);
        } catch (SQLException ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
