/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.animalclinic.view.panels;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.animalclinic.controller.MedicineController;
import lk.ijse.animalclinic.controller.OwnerController;
import lk.ijse.animalclinic.controller.PetController;
import lk.ijse.animalclinic.controller.VetController;
import lk.ijse.animalclinic.core.dto.MedicineDTO;
import lk.ijse.animalclinic.core.dto.OwnerDTO;
import lk.ijse.animalclinic.core.dto.PetDTO;
import lk.ijse.animalclinic.core.dto.VetDTO;
import lk.ijse.animalclinic.view.DialogFormAddPet;
import lk.ijse.animalclinic.view.HomeFrame;

/**
 *
 * @author chamindu
 */
public class ViewPetPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPetPanel
     */
    public ViewPetPanel() {
        initComponents();
        loadAllOwnerIDs();
       }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel55 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cmbSex = new javax.swing.JComboBox();
        jLabel48 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        txtPetBreed = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        txtPetDesc = new javax.swing.JTextField();
        btnRemovePet = new javax.swing.JLabel();
        btnEditPet = new javax.swing.JLabel();
        btnAddPet = new javax.swing.JLabel();
        txtPetName = new javax.swing.JTextField();
        cmbPetID = new org.jdesktop.swingx.JXComboBox();
        txtPetWeight = new javax.swing.JSpinner();
        txtPetDOB = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        txtNIC = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPetData = new org.jdesktop.swingx.JXTable();
        jLabel30 = new javax.swing.JLabel();
        cmbOwnerID = new org.jdesktop.swingx.JXComboBox();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel55.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(204, 204, 204));
        jLabel55.setText("Pet Details");
        add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 40));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Pet ID         -");
        jPanel9.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 110, 30));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setText("Sex              -");
        jPanel9.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 110, 30));

        cmbSex.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbSex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        jPanel9.add(cmbSex, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, 160, 30));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel48.setText("Name          -");
        jPanel9.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 110, 30));

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel51.setText("Breed          -");
        jPanel9.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 110, 30));

        txtPetBreed.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPetBreed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtPetBreed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPetBreedActionPerformed(evt);
            }
        });
        jPanel9.add(txtPetBreed, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, 375, 30));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel49.setText("DOB             -");
        jPanel9.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 110, 30));

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel53.setText("weight        -");
        jPanel9.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, 110, 30));

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel52.setText("Description -");
        jPanel9.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 110, 30));

        txtPetDesc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPetDesc.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtPetDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPetDescActionPerformed(evt);
            }
        });
        jPanel9.add(txtPetDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 200, 1160, 30));

        btnRemovePet.setBackground(new java.awt.Color(102, 102, 102));
        btnRemovePet.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnRemovePet.setForeground(new java.awt.Color(189, 103, 107));
        btnRemovePet.setText("   Remove ");
        btnRemovePet.setOpaque(true);
        btnRemovePet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemovePetMouseClicked(evt);
            }
        });
        jPanel9.add(btnRemovePet, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 290, 130, 50));

        btnEditPet.setBackground(new java.awt.Color(102, 102, 102));
        btnEditPet.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnEditPet.setForeground(new java.awt.Color(255, 255, 255));
        btnEditPet.setText("      Edit ");
        btnEditPet.setOpaque(true);
        btnEditPet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditPetMouseClicked(evt);
            }
        });
        jPanel9.add(btnEditPet, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 290, 130, 50));

        btnAddPet.setBackground(new java.awt.Color(204, 204, 204));
        btnAddPet.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddPet.setForeground(new java.awt.Color(255, 255, 255));
        btnAddPet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/animalclinic/images/add.png"))); // NOI18N
        btnAddPet.setText("New Pet");
        btnAddPet.setOpaque(true);
        btnAddPet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddPetMouseClicked(evt);
            }
        });
        jPanel9.add(btnAddPet, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 140, 40));

        txtPetName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPetName.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel9.add(txtPetName, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 100, 220, 30));

        cmbPetID.setBackground(new java.awt.Color(250, 255, 255));
        cmbPetID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbPetID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPetIDItemStateChanged(evt);
            }
        });
        jPanel9.add(cmbPetID, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 50, 220, 30));

        txtPetWeight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel9.add(txtPetWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, 160, 30));

        txtPetDOB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPetDOB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtPetDOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPetDOBActionPerformed(evt);
            }
        });
        jPanel9.add(txtPetDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 150, 220, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("KG");
        jPanel9.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 150, 30, 30));

        add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 1280, 340));

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel56.setText("NIC              -");
        add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, 110, 30));

        txtNIC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNIC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtNIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNICActionPerformed(evt);
            }
        });
        add(txtNIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 60, 260, 30));

        tblPetData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pet ID", "Pet Name", "Date of Birth", "Sex", "Breed", "Weight", "Description"
            }
        ));
        tblPetData.setEditable(false);
        tblPetData.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        tblPetData.setRowHeight(25);
        tblPetData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPetDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPetData);
        if (tblPetData.getColumnModel().getColumnCount() > 0) {
            tblPetData.getColumnModel().getColumn(6).setResizable(false);
            tblPetData.getColumnModel().getColumn(6).setPreferredWidth(500);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 1280, 250));

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setText("Owner ID    -");
        add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 110, 30));

        cmbOwnerID.setBackground(new java.awt.Color(250, 255, 255));
        cmbOwnerID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbOwnerID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOwnerIDItemStateChanged(evt);
            }
        });
        add(cmbOwnerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 220, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void txtPetBreedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPetBreedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPetBreedActionPerformed

    private void txtPetDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPetDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPetDescActionPerformed

    private void btnAddPetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddPetMouseClicked
        DialogFormAddPet addPet = new DialogFormAddPet(HomeFrame.homeFrame, true);
        addPet.setVisible(true);
        if (DialogFormAddPet.isAdded()) {
           loadPetIDs();
           loadAllPets();
        }
    }//GEN-LAST:event_btnAddPetMouseClicked

    private void btnEditPetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditPetMouseClicked
        PetDTO pet = new PetDTO(cmbOwnerID.getSelectedItem().toString(), cmbPetID.getSelectedItem().toString(), txtPetName.getText(), (String) cmbSex.getSelectedItem(), txtPetBreed.getText(), txtPetDOB.getText(), Double.parseDouble(txtPetWeight.getValue().toString()), txtPetDesc.getText());
        try {
            boolean result = PetController.editPet(pet);

            if (result) {
                JOptionPane.showMessageDialog(this, "Pet has been successfully Edited.");
                loadAllPets();
            } else {
                JOptionPane.showMessageDialog(this, "Pet hasn't been edited due to some error");
            }

        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditPetMouseClicked

    private void cmbOwnerIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOwnerIDItemStateChanged
        txtPetName.setText(null);
        txtPetBreed.setText(null);
        txtPetWeight.setValue(0);
        txtPetDesc.setText(null);
        txtPetDOB.setText(null);
        try {
            if (cmbOwnerID.getSelectedIndex() == -1)return;
                OwnerDTO owner = OwnerController.searchOwnerByID(cmbOwnerID.getSelectedItem().toString());
                if (owner == null)return;
                txtNIC.setText(owner.getNIC());
                loadPetIDs();
                loadAllPets();
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_cmbOwnerIDItemStateChanged

    private void cmbPetIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPetIDItemStateChanged
        try {
            if (cmbPetID.getSelectedIndex() == -1)return;
            PetDTO pet = PetController.searchPetByID(cmbPetID.getSelectedItem().toString());
            if (pet == null)return;
                txtPetName.setText(pet.getPetName());
                txtPetBreed.setText(pet.getBreed());
                cmbSex.setSelectedItem(pet.getSex());
                txtPetDOB.setText(pet.getDOB());
                txtPetWeight.setValue(pet.getWeight());
                txtPetDesc.setText(pet.getDescription());
            
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbPetIDItemStateChanged

    private void btnRemovePetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemovePetMouseClicked
       PetDTO pet = new PetDTO(cmbOwnerID.getSelectedItem().toString(), cmbPetID.getSelectedItem().toString(), txtPetName.getText(), (String) cmbSex.getSelectedItem(), txtPetBreed.getText(), txtPetDOB.getText(), Double.parseDouble(txtPetWeight.getValue().toString()), txtPetDesc.getText());
        try {
            boolean result =PetController.removePet(pet);
            if (result) {
                JOptionPane.showMessageDialog(this, "Pet has been successfully Removed.");
                txtNIC.setText(null);
                txtPetBreed.setText(null);
                txtPetDOB.setText(null);
                txtPetDesc.setText(null);
                txtPetName.setText(null);
                txtPetWeight.setValue(0);
                loadPetIDs();
                loadAllPets();
            } else {
                JOptionPane.showMessageDialog(this, "Pet hasn't been Removed due to some error");
            }

        } catch (Exception ex) {
            Logger.getLogger(MedicinePanel.class.getName()).log(Level.SEVERE, null, ex);
        } 
         
    }//GEN-LAST:event_btnRemovePetMouseClicked

    private void tblPetDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPetDataMouseClicked
        String id=(String) tblPetData.getValueAt(tblPetData.getSelectedRow(),0);
        try {
            if (tblPetData.getRowCount()==-1)return;
            PetDTO pet = PetController.searchPetByID(id);
            if (pet == null)return;
                cmbPetID.setSelectedItem(pet.getPetID());
                txtPetName.setText(pet.getPetName());
                txtPetBreed.setText(pet.getBreed());
                cmbSex.setSelectedItem(pet.getSex());
                txtPetDOB.setText(pet.getDOB());
                txtPetWeight.setValue(pet.getWeight());
                txtPetDesc.setText(pet.getDescription());
            
        } catch (Exception ex) {
            Logger.getLogger(ViewPetPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblPetDataMouseClicked

    private void txtNICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNICActionPerformed
        txtPetName.setText(null);
        txtPetBreed.setText(null);
        txtPetWeight.setValue(0);
        txtPetDesc.setText(null);
        txtPetDOB.setText(null);
        try {
                OwnerDTO owner = OwnerController.searchOwnerByNIC(txtNIC.getText());
                if (owner == null)return;
                cmbOwnerID.setSelectedItem(owner.getOID());
                loadPetIDs();
                loadAllPets();
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtNICActionPerformed

    private void txtPetDOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPetDOBActionPerformed
        /*try {
            PetDTO pet = PetController.searchPetByName(txtPetName.getText());
            cmbPetID.setSelectedItem(pet.getPetID());
            txtPetName.setText(pet.getPetName());
            txtPetBreed.setText(pet.getBreed());
            cmbSex.setSelectedItem(pet.getSex());
            txtPetDOB.setDate(pet.getDOB());
            txtPetWeight.setText(Double.toString(pet.getWeight()));
            txtDesc.setText(pet.getDescription());

        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_txtPetDOBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAddPet;
    private javax.swing.JLabel btnEditPet;
    private javax.swing.JLabel btnRemovePet;
    private org.jdesktop.swingx.JXComboBox cmbOwnerID;
    private org.jdesktop.swingx.JXComboBox cmbPetID;
    private javax.swing.JComboBox cmbSex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTable tblPetData;
    private javax.swing.JTextField txtNIC;
    private javax.swing.JTextField txtPetBreed;
    private javax.swing.JTextField txtPetDOB;
    private javax.swing.JTextField txtPetDesc;
    private javax.swing.JTextField txtPetName;
    private javax.swing.JSpinner txtPetWeight;
    // End of variables declaration//GEN-END:variables
private void loadPetIDs() {
        try {
            ArrayList<PetDTO> allPets = PetController.getPets(cmbOwnerID.getSelectedItem().toString());
            cmbPetID.removeAllItems();
            if (allPets == null) {
                return;
            }

            for (PetDTO pet : allPets) {
                cmbPetID.addItem(pet.getPetID());
            }
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAllOwnerIDs() {
        try {
            ArrayList<OwnerDTO> allOwners = OwnerController.getAllOwners();
            cmbOwnerID.removeAllItems();
            if (allOwners == null) {
                return;
            }
            for (OwnerDTO owner : allOwners) {
                cmbOwnerID.addItem(owner.getOID());
            }
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void loadAllPets() {
        try {
            ArrayList<PetDTO> allPets = PetController.getPets(cmbOwnerID.getSelectedItem().toString());
            DefaultTableModel dtm = (DefaultTableModel)tblPetData.getModel();
            dtm.setRowCount(0);

            if (allPets != null) {

                for (PetDTO pet : allPets) {

                    Object[] rowData = {
                        pet.getPetID(),
                        pet.getPetName(),
                        pet.getDOB(),
                        pet.getSex(),
                        pet.getBreed(),
                        pet.getWeight(),
                        pet.getDescription()
                    };

                    dtm.addRow(rowData);

                }

            }

        } catch (Exception ex) {
            Logger.getLogger(ViewPetPanel.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
}
