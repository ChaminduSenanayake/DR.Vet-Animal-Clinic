/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.animalclinic.view.panels;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.animalclinic.controller.PetController;
import lk.ijse.animalclinic.controller.SheduleController;
import lk.ijse.animalclinic.controller.VetController;
import lk.ijse.animalclinic.core.dto.PetDTO;
import lk.ijse.animalclinic.core.dto.SheduleDTO;
import lk.ijse.animalclinic.core.dto.VetDTO;
import lk.ijse.animalclinic.view.DialogFormAddShedule;
import lk.ijse.animalclinic.view.HomeFrame;

/**
 *
 * @author chamindu
 */
public class SchedulePanel extends javax.swing.JPanel {

    DefaultTableModel dtmShedule;

    /**
     * Creates new form ShedulePanel
     */
    public SchedulePanel() {
        initComponents();
        dtmShedule = (DefaultTableModel) tblShedule.getModel();
        loadAllSheduleIDs();
        loadAllVetIDs();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblShedule = new org.jdesktop.swingx.JXTable();
        jLabel41 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        cmbVetIDSearch = new org.jdesktop.swingx.JXComboBox();
        jLabel55 = new javax.swing.JLabel();
        txtVetFirstName = new org.jdesktop.swingx.JXTextField();
        txtVetLastName = new org.jdesktop.swingx.JXTextField();
        jLabel29 = new javax.swing.JLabel();
        cmbVetID = new org.jdesktop.swingx.JXComboBox();
        jLabel56 = new javax.swing.JLabel();
        txtVetFirstName1 = new org.jdesktop.swingx.JXTextField();
        txtVetLastName1 = new org.jdesktop.swingx.JXTextField();
        jLabel30 = new javax.swing.JLabel();
        cmbSheduleID = new org.jdesktop.swingx.JXComboBox();
        jLabel31 = new javax.swing.JLabel();
        btnAddShedule = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        txtInTime = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        txtOutTime = new javax.swing.JTextField();
        btnRemoveShedule = new javax.swing.JLabel();
        btnEditShedule = new javax.swing.JLabel();
        cmbDay1 = new org.jdesktop.swingx.JXComboBox();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblShedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Schedule ID", "Veterinary First Name", "Last Name", "Day", "In Time", "Out Time"
            }
        ));
        tblShedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSheduleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblShedule);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1280, 240));

        jLabel41.setBackground(new java.awt.Color(51, 255, 255));
        jLabel41.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(204, 204, 204));
        jLabel41.setText("Schedule");
        add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 40));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setText("Vet.ID         -");
        add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 110, 30));

        cmbVetIDSearch.setBackground(new java.awt.Color(250, 255, 255));
        cmbVetIDSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbVetIDSearch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbVetIDSearchItemStateChanged(evt);
            }
        });
        add(cmbVetIDSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 220, 30));

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel55.setText("Vet Name   -");
        add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 110, 30));

        txtVetFirstName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtVetFirstName.setPrompt("First Name");
        add(txtVetFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 200, 30));

        txtVetLastName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtVetLastName.setPrompt("Last Name");
        add(txtVetLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(675, 70, 300, 30));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setText("Vet.ID           -");
        add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 480, 110, 30));

        cmbVetID.setBackground(new java.awt.Color(250, 255, 255));
        cmbVetID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbVetID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbVetIDItemStateChanged(evt);
            }
        });
        add(cmbVetID, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 480, 220, 30));

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel56.setText("Vet Name    -");
        add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 480, 130, 30));

        txtVetFirstName1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtVetFirstName1.setPrompt("First Name");
        add(txtVetFirstName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, 240, 30));

        txtVetLastName1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtVetLastName1.setPrompt("Last Name");
        add(txtVetLastName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 480, 370, 30));

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setText("Day              -");
        add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(392, 420, 110, 30));

        cmbSheduleID.setBackground(new java.awt.Color(250, 255, 255));
        cmbSheduleID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbSheduleID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSheduleIDItemStateChanged(evt);
            }
        });
        add(cmbSheduleID, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 220, 30));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel31.setText("Schedule ID    -");
        add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 110, 30));

        btnAddShedule.setBackground(new java.awt.Color(204, 204, 204));
        btnAddShedule.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddShedule.setForeground(new java.awt.Color(255, 255, 255));
        btnAddShedule.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/animalclinic/images/add.png"))); // NOI18N
        btnAddShedule.setText("New Shedule");
        btnAddShedule.setOpaque(true);
        btnAddShedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddSheduleMouseClicked(evt);
            }
        });
        add(btnAddShedule, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 620, 160, 50));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel48.setText("In Time          -");
        add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 540, 110, 30));

        txtInTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtInTime.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(txtInTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 540, 240, 30));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel49.setText("Out Time        -");
        add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 590, 110, 30));

        txtOutTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtOutTime.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(txtOutTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 590, 240, 30));

        btnRemoveShedule.setBackground(new java.awt.Color(102, 102, 102));
        btnRemoveShedule.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnRemoveShedule.setForeground(new java.awt.Color(189, 103, 107));
        btnRemoveShedule.setText("  Remove  ");
        btnRemoveShedule.setOpaque(true);
        btnRemoveShedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveSheduleMouseClicked(evt);
            }
        });
        add(btnRemoveShedule, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 670, 130, 50));

        btnEditShedule.setBackground(new java.awt.Color(102, 102, 102));
        btnEditShedule.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnEditShedule.setForeground(new java.awt.Color(255, 255, 255));
        btnEditShedule.setText("      Edit ");
        btnEditShedule.setOpaque(true);
        btnEditShedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditSheduleMouseClicked(evt);
            }
        });
        add(btnEditShedule, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 670, 130, 50));

        cmbDay1.setBackground(new java.awt.Color(250, 255, 255));
        cmbDay1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SunDay", "MonDay", "TuesDay", "WednesDay", "ThursDay", "FriDay", "SaturDay" }));
        cmbDay1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbDay1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDay1ItemStateChanged(evt);
            }
        });
        add(cmbDay1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 420, 240, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void cmbVetIDSearchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbVetIDSearchItemStateChanged
        try {
            if (cmbVetIDSearch.getSelectedIndex() == -1) {
                return;
            }
            VetDTO vet = VetController.searchVetByID(cmbVetIDSearch.getSelectedItem().toString());
            if (vet == null) {
                return;
            }
            txtVetFirstName.setText(vet.getfName());
            txtVetLastName.setText(vet.getlName());
            loadTableByVetID();

        } catch (Exception ex) {
            Logger.getLogger(SchedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbVetIDSearchItemStateChanged

    private void cmbVetIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbVetIDItemStateChanged
        try {
            if (cmbVetID.getSelectedIndex() == -1) {
                return;
            }
            VetDTO vet = VetController.searchVetByID(cmbVetID.getSelectedItem().toString());
            if (vet == null) {
                return;
            }
            txtVetFirstName1.setText(vet.getfName());
            txtVetLastName1.setText(vet.getlName());

        } catch (Exception ex) {
            Logger.getLogger(SchedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbVetIDItemStateChanged

    private void cmbSheduleIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSheduleIDItemStateChanged
        try {
            if (cmbSheduleID.getSelectedIndex() == -1) {
                return;
            }
            SheduleDTO shedule = SheduleController.searchSheduleByID(cmbSheduleID.getSelectedItem().toString());
            if (shedule == null) {
                return;
            }
            txtInTime.setText(shedule.getInTime());
            txtOutTime.setText(shedule.getOutTime());
            cmbVetID.setSelectedItem(shedule.getVID());

        } catch (Exception ex) {
            Logger.getLogger(VeterinaryPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbSheduleIDItemStateChanged

    private void btnAddSheduleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddSheduleMouseClicked
        DialogFormAddShedule shedule = new DialogFormAddShedule(HomeFrame.homeFrame, true);
        shedule.setVisible(true);
        if (DialogFormAddShedule.isAdded()) {
            loadAllSheduleIDs();

        }
    }//GEN-LAST:event_btnAddSheduleMouseClicked

    private void btnRemoveSheduleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveSheduleMouseClicked
        SheduleDTO sDTO = new SheduleDTO(cmbSheduleID.getSelectedItem().toString(), cmbVetID.getSelectedItem().toString(), cmbDay1.getSelectedItem().toString(),txtInTime.getText(),txtOutTime.getText());
        try {
            boolean result =SheduleController.removeShedule(sDTO);
            if (result) {
                JOptionPane.showMessageDialog(this, "Shedule has been successfully Removed.");
                cmbSheduleID.setSelectedIndex(-1);
                txtInTime.setText(null);
                txtOutTime.setText(null);
                txtVetFirstName1.setText(null);
                txtVetLastName1.setText(null);
                loadAllSheduleIDs();
                loadAllVetIDs();
                loadTableByVetID();
            } else {
                JOptionPane.showMessageDialog(this, "Shedule hasn't been Removed due to some error");
            }

        } catch (Exception ex) {
            Logger.getLogger(MedicinePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRemoveSheduleMouseClicked

    private void btnEditSheduleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditSheduleMouseClicked
        SheduleDTO sDTO = new SheduleDTO(cmbSheduleID.getSelectedItem().toString(), cmbVetID.getSelectedItem().toString(), cmbDay1.getSelectedItem().toString(),txtInTime.getText(),txtOutTime.getText());
        try {
            boolean result = SheduleController.editShedule(sDTO);

            if (result) {
                JOptionPane.showMessageDialog(this, "Shedule has been successfully Edited.");
                loadAllSheduleIDs();
                
            } else {
                JOptionPane.showMessageDialog(this, "Shedule hasn't been edited due to some error");
            }
        } catch (Exception ex) {
            Logger.getLogger(AddAppointmentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditSheduleMouseClicked

    private void cmbDay1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDay1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDay1ItemStateChanged

    private void tblSheduleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSheduleMouseClicked
        String id=(String) tblShedule.getValueAt(tblShedule.getSelectedRow(),0);
        try {
            if (tblShedule.getRowCount()==-1)return;
            SheduleDTO sheduleDTO=SheduleController.searchSheduleByID(id);
            if (sheduleDTO == null)return;
                cmbSheduleID.setSelectedItem(sheduleDTO.getSID());
                cmbVetID.setSelectedItem(sheduleDTO.getVID());
                cmbDay1.setSelectedItem(sheduleDTO.getDay());
                txtInTime.setText(sheduleDTO.getInTime());
                txtOutTime.setText(sheduleDTO.getOutTime());
        } catch (Exception ex) {
            Logger.getLogger(ViewPetPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_tblSheduleMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAddShedule;
    private javax.swing.JLabel btnEditShedule;
    private javax.swing.JLabel btnRemoveShedule;
    private org.jdesktop.swingx.JXComboBox cmbDay1;
    private org.jdesktop.swingx.JXComboBox cmbSheduleID;
    private org.jdesktop.swingx.JXComboBox cmbVetID;
    private org.jdesktop.swingx.JXComboBox cmbVetIDSearch;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTable tblShedule;
    private javax.swing.JTextField txtInTime;
    private javax.swing.JTextField txtOutTime;
    private org.jdesktop.swingx.JXTextField txtVetFirstName;
    private org.jdesktop.swingx.JXTextField txtVetFirstName1;
    private org.jdesktop.swingx.JXTextField txtVetLastName;
    private org.jdesktop.swingx.JXTextField txtVetLastName1;
    // End of variables declaration//GEN-END:variables
private void loadAllVetIDs() {
        try {
            ArrayList<VetDTO> allVet = VetController.getAllVets();
            cmbVetIDSearch.removeAllItems();
            cmbVetID.removeAllItems();

            if (allVet == null) {
                return;
            }
            for (VetDTO vet : allVet) {
                cmbVetIDSearch.addItem(vet.getVID());
                cmbVetID.addItem(vet.getVID());

            }
        } catch (Exception ex) {
            Logger.getLogger(VeterinaryPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAllSheduleIDs() {
        try {
            ArrayList<SheduleDTO> allShedules = SheduleController.getAllShedules();
            cmbSheduleID.removeAllItems();

            if (allShedules == null) {
                return;
            }
            for (SheduleDTO shedule : allShedules) {
                cmbSheduleID.addItem(shedule.getSID());

            }
        } catch (Exception ex) {
            Logger.getLogger(VeterinaryPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadTableByVetID() {
        try {
            ArrayList<SheduleDTO> sheduleByVID=SheduleController.getAllShedulesByVetID(cmbVetIDSearch.getSelectedItem().toString());
            if(sheduleByVID==null)return;
            dtmShedule.setRowCount(0);
            for (SheduleDTO sheduleDTO : sheduleByVID) {
                Object[] rowData={sheduleDTO.getSID(),txtVetFirstName.getText(),txtVetLastName.getText(),sheduleDTO.getDay(),sheduleDTO.getInTime(),sheduleDTO.getOutTime()};
                dtmShedule.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(SchedulePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
   
}
